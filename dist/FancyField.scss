$fancy-field-error-color:               #ea4858 !default;
$fancy-field-editable-border-color:     #85c7ff !default;
$fancy-field-border-color:              #ccc !default;
$fancy-field-disabled-background-color: #f9f9f9 !default;
$fancy-field-focus-border-color:        #00a8e0 !default;
$fancy-field-label-color:               #999999 !default;
$fancy-field-required-color:            red !default;
$fancy-field-typeahead-focus-color:     #f2fafd !default;
$fancy-field-typeahead-focus-text-color: black !default;
$fancy-field-typeahead-bg-color: white !default;
@import './../assets/simptip-master/simptip.scss';

$fancy-field-breakpoints: (
    "palm"          "screen and (max-width: 525px)",
    "lap"           "screen and (min-width: 526px) and (max-width: 768px)",
    "lap-and-up"    "screen and (min-width: 769px)",
    "portable"      "screen and (max-width: 768px)",
    "desk"          "screen and (min-width: 769px)",
    "retina"        "(-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi), (min-resolution: 2dppx)"
) !default;

@mixin fancy-field-vendor($prop, $val) {
  -webkit-#{$prop}: #{$val};
  -ms-#{$prop}: #{$val};
  -moz-#{$prop}: #{$val};
  -o-#{$prop}: #{$val};
  #{$prop}: #{$val};
}

@mixin fancy-field-media-query($mq) {

    $breakpoint-found: false;

    // Loop through the list of breakpoints we’ve provided in our settings file.
    @each $breakpoint in $fancy-field-breakpoints {

        // Grab the alias and the condition from their respective locations in
        // the list.
        $alias:     nth($breakpoint, 1);
        $condition: nth($breakpoint, 2);

        // If the media query we’ve specified has an alias and a condition...
        @if $mq == $alias and $condition {

            // ...tell the mixin that we’ve found it...
            $breakpoint-found: true;

            // ...and spit it out here.
            @media #{$condition} {
                @content;
            }

        }

    }

    // If the user specifies a non-exitent alias, send them a warning.
    @if $breakpoint-found == false{
        @warn "Oops! Breakpoint ‘#{$mq}’ does not exist."
    }

}


.full-width {
  width: 100%;
}

.fancy-field {
  position: relative;
}

.fancy-field__input {
  border: none;
  border-bottom: 1px solid $fancy-field-border-color;
  display: inline-block;
  font-weight: 100;
  line-height: 2;
  @include fancy-field-media-query(palm) {
    font-size: 1.125rem;
  }
}

.fancy-field.is-editable .fancy-field__input {
  border-bottom-color: $fancy-field-editable-border-color;
}

.fancy-field__input[disabled] {
  border-bottom-color: $fancy-field-border-color;
}

.fancy-field__label {
  position: absolute;
  top: 0px;
  color: $fancy-field-label-color;
  font-weight: 100;
  font-size: .625rem;
  pointer-events: none;
  text-transform: uppercase;
  @include fancy-field-vendor(transition, all 0.3s ease);
  opacity: 0;
}

.fancy-field {
  .fancy-field__input {
    &:focus {
      outline: none !important;
      border-bottom-color: $fancy-field-focus-border-color;
      & + .fancy-field__label {
        color: $fancy-field-focus-border-color;
      }
    }

    &[disabled] {
      background-color: $fancy-field-disabled-background-color;
      padding-left: 10px;
    }
  }
}

.fancy-field__label--error {
  color: $fancy-field-error-color !important;
}

.fancy-field__input--error {
  border-bottom-color: $fancy-field-error-color !important;
}

.fancy-field--has-content .fancy-field__label {
  opacity: 1;
  top: -16px;
}

.has-icon .fancy-field__input {
  padding-left: 30px !important;
}

.has-icon.has-icon--right {
  .fancy-field__input {
    padding-left: 0 !important;
    padding-right: 30px !important;
  }
  .fancy-field__icon {
    right: 0;
  }
}

.fancy-field__tooltip,
.fancy-field__icon {
  position: absolute;
  bottom: -1px;
  display: inline-block;
}

.unsullied-icon-help {
  width: 25px;
  height: 25px;
  background-repeat: no-repeat;
  display: inline-block;
}

.fancy-field.required:after {
  content: 'required';
  font-size: 10px;
  color: $fancy-field-required-color;
  position: absolute;
  left: 0;
  bottom: -14px;
}

.fancy-field__typeahead {
  position: absolute;
  background: $fancy-field-typeahead-bg-color;
  width: 100%;
  z-index: 1;
  border-bottom: 1px solid $fancy-field-border-color;
  border-right: 1px solid $fancy-field-border-color;
  border-left: 1px solid $fancy-field-border-color;

  ul {
    list-style: none;
    margin: 0;
    max-height: 140px;
    overflow: scroll;

    li {
      padding: 5px 0 5px 15px;
      cursor: pointer;
      &:hover,
      &.fancy-field__typeahead-opt--active {
        color: $fancy-field-typeahead-focus-text-color;
        background: $fancy-field-typeahead-focus-color;
      }
    }
  }
}

.fancy-field__typeahead--hidden {
  height: 0;
  overflow: hidden;
  border: none;
}


// https://www.w3.org/WAI/tutorials/forms/labels/#note-on-hiding-elements
.fancy-field__visuallyhidden {
  border: 0;
  clip: rect(0 0 0 0);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0;
  position: absolute;
  width: 1px;
}
